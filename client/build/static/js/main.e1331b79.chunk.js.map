{"version":3,"sources":["redux/reducers/auth.js","redux/reducers/expense.js","redux/rootReducer.js","redux/store.js","components/NavBar.jsx","redux/actions/auth.js","components/SignUp.jsx","components/Login.jsx","pages/LandingPage.jsx","redux/actions/expense.js","components/ExpenseForm.jsx","pages/ExpensesPage.jsx","App.js","index.js"],"names":["initialState","token","localStorage","getItem","isAuthenticated","user","signupErrors","loginErrors","addExpenseStatus","getExpenseStatus","myExpense","combineReducers","auth","state","action","type","payload","removeItem","expense","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","NavBar","useSelector","dispatch","useDispatch","Navbar","className","Container","Fragment","to","id","onClick","addSignupErrors","error","addLoginErrors","loadUser","a","axios","get","res","data","withRouter","useState","mobileNumber","email","password","password2","setData","errors","setErrors","useEffect","handleChange","event","newData","target","name","value","noValidate","onSubmit","preventDefault","data1","parseInt","console","log","post","defaults","headers","common","setItem","response","forEach","param","msg","register","onChange","phone","placeholder","required","classnames","login","props","history","replace","Row","Col","md","getExpense","ExpenseForm","modal","setModal","description","setDescription","date","setDate","amount","setAmount","resetClose","exp","slice","toggle","button","Button","outline","size","color","Modal","isOpen","Form","put","updateExpense","_id","addExpense","ModalHeader","heading","ModalBody","FormGroup","Label","for","sm","Input","e","InputGroup","InputGroupAddon","addonType","ModalFooter","userData","setUserData","deleteEx","delete","Badge","Table","striped","map","item","ind","key","scope","App","exact","path","component","LandingPage","ExpensePage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1331b79.chunk.js","sourcesContent":["const initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  user: null,\r\n  signupErrors: {},\r\n  loginErrors: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case 'USER_LOADED':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: payload,\r\n      };\r\n    case 'AUTH_ERROR':\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    case 'REGISTER_SUCCESS':\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    case 'ADD_LOGIN_ERRORS':\r\n      return {\r\n        ...state,\r\n        loginErrors: { ...state.loginErrors, ...payload },\r\n        token: null,\r\n        isAuthenticated: false,\r\n      };\r\n    case 'CLEAR_LOGIN_ERRORS':\r\n      return {\r\n        ...state,\r\n        loginErrors: {},\r\n      };\r\n    case 'ADD_SIGNUP_ERRORS':\r\n      return {\r\n        ...state,\r\n        signupErrors: { ...state.signupErrors, ...payload },\r\n        token: null,\r\n        isAuthenticated: false,\r\n      };\r\n    case 'CLEAR_SIGNUP_ERRORS':\r\n      return {\r\n        ...state,\r\n        signupErrors: {},\r\n      };\r\n    case 'LOGOUT':\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  addExpenseStatus: '',\r\n  getExpenseStatus: '',\r\n  myExpense: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case 'ADD_EXPENSE_PENDING':\r\n      return {\r\n        ...state,\r\n        addExpenseStatus: 'PENDING',\r\n      };\r\n    case 'ADD_EXPENSE_FAILURE':\r\n      return {\r\n        ...state,\r\n        addExpenseStatus: 'FAILURE',\r\n      };\r\n    case 'ADD_EXPENSE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        addExpenseStatus: 'SUCCESS',\r\n      };\r\n    case 'ADD_EXPENSE_RESET':\r\n      return {\r\n        ...state,\r\n        addExpenseStatus: '',\r\n      };\r\n    case 'GET_EXPENSE_PENDING':\r\n      return {\r\n        ...state,\r\n        getExpenseStatus: 'PENDING',\r\n      };\r\n    case 'GET_EXPENSE_FAILURE':\r\n      return {\r\n        ...state,\r\n        getExpenseStatus: 'FAILURE',\r\n      };\r\n    case 'GET_EXPENSE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        getExpenseStatus: 'SUCCESS',\r\n        myExpense: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport auth from './reducers/auth';\r\nimport expense from './reducers/expense';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  expense,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar, Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n  const { isAuthenticated } = useSelector((state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Navbar className='navbar-expand-sm navbar-dark bg-dark sticky-top display'>\r\n      <Container>\r\n        {isAuthenticated ? (\r\n          <React.Fragment>\r\n            <div className='col-2'>\r\n              <Link className='navbar-brand' to='/expense'>\r\n                <h3>EXPENSELY</h3>\r\n              </Link>\r\n            </div>\r\n            <div className='collapse navbar-collapse' id='navbar-menu'>\r\n              <ul className='navbar-nav ml-auto'>\r\n                <li className='nav-item'>\r\n                  <Link\r\n                    className='nav-link'\r\n                    onClick={() => dispatch({ type: 'LOGOUT' })}\r\n                    to='/'\r\n                  >\r\n                    Logout\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </React.Fragment>\r\n        ) : (\r\n          <Link className='navbar-brand col-12 text-center' to='/'>\r\n            <h3>EXPENSELY</h3>\r\n          </Link>\r\n        )}\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import axios from 'axios';\r\n\r\nconst addSignupErrors = (error) => {\r\n  return (dispatch) => dispatch({ type: 'ADD_SIGNUP_ERRORS', payload: error });\r\n};\r\n\r\nconst addLoginErrors = (error) => {\r\n  return (dispatch) => dispatch({ type: 'ADD_LOGIN_ERRORS', payload: error });\r\n};\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('api/users/auth');\r\n\r\n    dispatch({\r\n      type: 'USER_LOADED',\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    localStorage.removeItem('token');\r\n    dispatch({\r\n      type: 'AUTH_ERROR',\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = (data) => async (dispatch) => {\r\n  dispatch({ type: 'CLEAR_SIGNUP_ERRORS' });\r\n  try {\r\n    const res = await axios.post('api/users/signup', data);\r\n\r\n    dispatch({\r\n      type: 'REGISTER_SUCCESS',\r\n      payload: res.data,\r\n    });\r\n    axios.defaults.headers.common['Authorization'] = res.data.token;\r\n    localStorage.setItem('token', res.data.token);\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    console.log(errors);\r\n    if (errors) {\r\n      localStorage.removeItem('token');\r\n      errors.forEach((error) => {\r\n        let param = error.param;\r\n        dispatch(addSignupErrors({ [param]: error.msg }));\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (data) => async (dispatch) => {\r\n  dispatch({ type: 'CLEAR_LOGIN_ERRORS' });\r\n  try {\r\n    const res = await axios.post('api/users/login', data);\r\n\r\n    dispatch({\r\n      type: 'LOGIN_SUCCESS',\r\n      payload: res.data,\r\n    });\r\n    axios.defaults.headers.common['Authorization'] = res.data.token;\r\n    localStorage.setItem('token', res.data.token);\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    console.log(errors);\r\n    if (errors) {\r\n      localStorage.removeItem('token');\r\n      errors.forEach((error) => {\r\n        let param = error.param;\r\n        dispatch(addLoginErrors({ [param]: error.msg }));\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { register } from '../redux/actions/auth';\r\n\r\nimport './SignUp.scss';\r\n\r\nconst SignUp = () => {\r\n  const [data, setData] = useState({\r\n    mobileNumber: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  // Redux Actions and State\r\n  const { signupErrors } = useSelector((state) => ({\r\n    signupErrors: state.auth.signupErrors,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (signupErrors) {\r\n      setErrors(signupErrors);\r\n    }\r\n  }, [signupErrors]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (data.mobileNumber === '') {\r\n      setErrors({\r\n        mobileNumber: 'Mobile Number is mandatory',\r\n      });\r\n    } else if (data.password !== data.password2) {\r\n      setErrors({\r\n        password2: \"Confirm Password doesn't match's\",\r\n      });\r\n    } else {\r\n      let data1 = {\r\n        mobileNumber: parseInt(data.mobileNumber),\r\n        email: data.email,\r\n        password: data.password,\r\n      };\r\n      console.log(data1);\r\n      setErrors({});\r\n      dispatch(register(data1));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    let newData = { ...data };\r\n    const { name, value } = event.target;\r\n    newData[name] = value;\r\n    setData(newData);\r\n  };\r\n\r\n  return (\r\n    <div className='card-body p-5'>\r\n      <h5 className='card-title display-4'>SIGN UP</h5>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className='form-group'>\r\n          <PhoneInput\r\n            value={data.mobileNumber}\r\n            onChange={(phone) => {\r\n              let newData = { ...data };\r\n              newData.mobileNumber = phone;\r\n              setData(newData);\r\n            }}\r\n            placeholder='Enter phone number'\r\n            required\r\n          />\r\n          {errors.mobileNumber && (\r\n            <small className='text-left text-danger'>\r\n              {errors.mobileNumber}\r\n            </small>\r\n          )}\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            className={classnames('form-control', {\r\n              'is-invalid': errors.email,\r\n            })}\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={data.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && (\r\n            <div className='invalid-feedback text-left'>{errors.email}</div>\r\n          )}\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            className={classnames('form-control', {\r\n              'is-invalid': errors.password,\r\n            })}\r\n            placeholder='Password'\r\n            name='password'\r\n            value={data.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && (\r\n            <div className='invalid-feedback text-left'>{errors.password}</div>\r\n          )}\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            className={classnames('form-control', {\r\n              'is-invalid': errors.password2,\r\n            })}\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={data.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && (\r\n            <div className='invalid-feedback text-left'>{errors.password2}</div>\r\n          )}\r\n        </div>\r\n        <input type='submit' className='btn btn-info btn-block mt-4' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { login } from '../redux/actions/auth';\r\n\r\nconst Login = () => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  //Redux Actions and State\r\n  const { loginErrors } = useSelector((state) => ({\r\n    loginErrors: state.auth.loginErrors,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (loginErrors) {\r\n      setErrors(loginErrors);\r\n    }\r\n  }, [loginErrors]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setErrors({});\r\n    console.log(data);\r\n\r\n    dispatch(login(data));\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    let newData = { ...data };\r\n    const { name, value } = event.target;\r\n    newData[name] = value;\r\n    setData(newData);\r\n  };\r\n\r\n  return (\r\n    <div className='card-body p-5'>\r\n      <h5 className='card-title display-4'>LOG IN</h5>\r\n      <form noValidate onSubmit={handleSubmit}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            className={classnames('form-control', {\r\n              'is-invalid': errors.email,\r\n            })}\r\n            placeholder='Email Address'\r\n            name='email'\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && (\r\n            <div className='invalid-feedback text-left'>{errors.email}</div>\r\n          )}\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            className={classnames('form-control', {\r\n              'is-invalid': errors.password,\r\n            })}\r\n            placeholder='Password'\r\n            name='password'\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && (\r\n            <div className='invalid-feedback text-left'>{errors.password}</div>\r\n          )}\r\n        </div>\r\n        <input type='submit' className='btn btn-info btn-block mt-4' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport SignUp from '../components/SignUp';\r\nimport Login from '../components/Login';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst LandingPage = (props) => {\r\n  const { isAuthenticated } = useSelector((state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  }));\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.replace('/expense');\r\n    }\r\n  }, [isAuthenticated]);\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md='6'>\r\n          <SignUp />\r\n        </Col>\r\n        <Col>\r\n          <Login />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(LandingPage);\r\n","import axios from 'axios';\r\n\r\n// Get User Expenses\r\nexport const getExpense = () => async (dispatch) => {\r\n  dispatch({ type: 'GET_EXPENSE_PENDING' });\r\n  try {\r\n    const res = await axios.get('api/expenses');\r\n    dispatch({ type: 'GET_EXPENSE_SUCCESS', payload: res.data });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    dispatch({ type: 'GET_EXPENSE_FAILURE' });\r\n    console.log(errors);\r\n    if (errors) {\r\n      console.log(errors);\r\n    }\r\n  }\r\n};\r\n\r\n// Add Expense\r\nexport const addExpense = (data) => async (dispatch) => {\r\n  dispatch({ type: 'ADD_EXPENSE_PENDING' });\r\n  try {\r\n    const res = await axios.post('api/expenses', data);\r\n    dispatch({ type: 'ADD_EXPENSE_SUCCESS' });\r\n    dispatch(getExpense());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    dispatch({ type: 'ADD_EXPENSE_FAILURE' });\r\n    console.log(errors);\r\n    if (errors) {\r\n      console.log(errors);\r\n    }\r\n  }\r\n};\r\n\r\n// Update Expense\r\nexport const updateExpense = (data) => async (dispatch) => {\r\n  dispatch({ type: 'ADD_EXPENSE_PENDING' });\r\n  try {\r\n    const res = await axios.put('api/expenses', data);\r\n    dispatch({ type: 'ADD_EXPENSE_SUCCESS' });\r\n    dispatch(getExpense());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    dispatch({ type: 'ADD_EXPENSE_FAILURE' });\r\n    console.log(errors);\r\n    if (errors) {\r\n      console.log(errors);\r\n    }\r\n  }\r\n};\r\n\r\n// delete Expense\r\nexport const deleteExpense = (data) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`api/expenses/?id=${data.id}`);\r\n    console.log(res.data);\r\n    dispatch(getExpense());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    console.log(errors);\r\n    if (errors) {\r\n      console.log(errors);\r\n    }\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from 'reactstrap';\r\n\r\nimport { addExpense, updateExpense } from '../redux/actions/expense';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const { addExpenseStatus } = useSelector((state) => ({\r\n    addExpenseStatus: state.expense.addExpenseStatus,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const [modal, setModal] = useState(false);\r\n  const [description, setDescription] = useState('');\r\n  const [date, setDate] = useState(null);\r\n  const [amount, setAmount] = useState(null);\r\n\r\n  const resetClose = () => {\r\n    setDescription('');\r\n    setAmount(null);\r\n    setDate(null);\r\n    setModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (addExpenseStatus === 'SUCCESS') {\r\n      dispatch({ type: 'ADD_EXPENSE_RESET' });\r\n      resetClose();\r\n    }\r\n  }, [addExpenseStatus]);\r\n\r\n  useEffect(() => {\r\n    if (props.exp) {\r\n      setDescription(props.exp.description);\r\n      setAmount(props.exp.amount);\r\n      setDate(props.exp.date.slice(0, 10));\r\n    }\r\n  }, [props.exp]);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let data = {\r\n      description,\r\n      date,\r\n      amount: parseInt(amount),\r\n    };\r\n    if (props.exp) {\r\n      dispatch(updateExpense({ ...data, id: props.exp._id }));\r\n    } else {\r\n      dispatch(addExpense(data));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.button === 'add' ? (\r\n        <Button\r\n          outline\r\n          size='lg'\r\n          color='secondary'\r\n          className='mx-3'\r\n          onClick={toggle}\r\n        >\r\n          Add Expenses\r\n        </Button>\r\n      ) : (\r\n        <Button outline color='primary' onClick={toggle}>\r\n          Edit\r\n        </Button>\r\n      )}\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <Form onSubmit={handleSubmit}>\r\n          <ModalHeader toggle={toggle}>{props.heading}</ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for='exampleText' sm={2}>\r\n                Description\r\n              </Label>\r\n              <Input\r\n                value={description}\r\n                type='textarea'\r\n                name='text'\r\n                id='exampleText'\r\n                required\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for='exampleDate'>Date</Label>\r\n              <Input\r\n                value={date}\r\n                type='date'\r\n                name='date'\r\n                id='exampleDate'\r\n                onChange={(e) => setDate(e.target.value)}\r\n                placeholder='date placeholder'\r\n                required\r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label for='exampleAmount'>Amount</Label>\r\n              <InputGroup>\r\n                <InputGroupAddon addonType='prepend'>₹</InputGroupAddon>\r\n                <Input\r\n                  value={amount}\r\n                  placeholder='00000'\r\n                  type='number'\r\n                  id='exampleAmount'\r\n                  onChange={(e) => setAmount(e.target.value)}\r\n                  required\r\n                />\r\n              </InputGroup>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button type='submit' color='primary'>\r\n              {props.exp ? 'Edit' : 'Add'}\r\n            </Button>{' '}\r\n            <Button color='secondary' onClick={resetClose}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Badge, Button, Table } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ExpenseForm from '../components/ExpenseForm';\r\nimport { getExpense, deleteExpense } from '../redux/actions/expense';\r\n\r\nconst ExpensesPage = (props) => {\r\n  const { isAuthenticated, user, myExpense } = useSelector((state) => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    user: state.auth.user,\r\n    myExpense: state.expense.myExpense,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  const [userData, setUserData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      props.history.replace('/');\r\n    } else {\r\n      dispatch(getExpense());\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setUserData(user);\r\n    }\r\n  }, [user]);\r\n\r\n  const deleteEx = (e) => {\r\n    dispatch(deleteExpense({ id: e.target.id }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className='my-5'>\r\n        <h2 className='col-md-9'>\r\n          <Badge color='secondary'>{userData.email}</Badge>\r\n        </h2>\r\n        <ExpenseForm button='add' heading='Add Expense' />\r\n      </Row>\r\n      <Table striped>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Description</th>\r\n            <th>Date (YYYY-MM-DD)</th>\r\n            <th>Amount</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {myExpense.map((item, ind) => (\r\n            <tr key={ind}>\r\n              <th scope='row'>{ind + 1}</th>\r\n              <td>{item.description}</td>\r\n              <td>{item.date.slice(0, 10)}</td>\r\n              <td>₹ {item.amount}</td>\r\n              <td>\r\n                <ExpenseForm button='edit' heading='Edit Expense' exp={item} />\r\n              </td>\r\n              <td>\r\n                <Button outline color='danger' id={item._id} onClick={deleteEx}>\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(ExpensesPage);\r\n","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport NavBar from './components/NavBar';\nimport LandingPage from './pages/LandingPage';\nimport ExpensePage from './pages/ExpensesPage';\n\nimport { loadUser } from './redux/actions/auth';\n\nconst App = () => {\n  useEffect(() => {\n    if (localStorage.token) {\n      axios.defaults.headers.common['Authorization'] = localStorage.token;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <React.Fragment>\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={LandingPage} />\n            <Route exact path='/expense' component={ExpensePage} />\n          </Switch>\n        </React.Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}